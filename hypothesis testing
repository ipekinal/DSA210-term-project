# 1. Import Required Libraries

We load libraries for:

- Data handling (`pandas`, `numpy`)
- Visualization (`matplotlib`, `seaborn`, `plotly`)
- Statistical testing (`scipy`)
- Machine learning models (`RandomForestRegressor`, `LinearRegression`, etc.)
- Model evaluation metrics (`mean_squared_error`, `r2_score`)

import pandas as pd
import numpy as np
import plotly.express as px
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.metrics import mean_squared_error, r2_score
import statsmodels.api as sm
import scipy.stats as stats

# 2. Load & Clean the Dataset
# Load data
df = pd.read_csv("movies_after_2000_final.csv")

# === Data Preprocessing ===
df = df.rename(columns={
    'Budget (USD)': 'Budget',
    'Revenue (USD)': 'Revenue',
    'IMDb Rating': 'Rating',
    'Genre': 'Genre'
})
df = df.dropna(subset=['Budget', 'Revenue', 'Rating', 'Genre'])
df = df[df['Genre'].str.lower() != 'western']

# Create ROI
df['ROI'] = (df['Revenue'] - df['Budget']) / df['Budget']

def plot_scatter(x, y, title):
    fig = px.scatter(df, x=x, y=y, hover_name="Title", trendline="ols",
                     title=title, template='plotly')
    fig.update_traces(marker=dict(size=7, opacity=0.6))
    fig.show()

plot_scatter("Budget", "Rating", "Budget vs IMDb Rating")
print("\nHypothesis: Budget affects IMDb Rating.")
corr, pval = stats.pearsonr(df["Budget"], df["Rating"])
print(f"Correlation: r = {corr:.2f}, p = {pval:.2e}")
print("✅ Conclusion:" if pval < 0.05 else "❌ No significant evidence found.")

plot_scatter("Revenue", "Rating", "Revenue vs IMDb Rating")
corr, pval = stats.pearsonr(df["Revenue"], df["Rating"])
print(f"\nHypothesis: Revenue affects IMDb Rating.\nCorrelation: r = {corr:.2f}, p = {pval:.2e}")
print("✅ Conclusion:" if pval < 0.05 else "❌ No significant evidence found.")

plot_scatter("Budget", "Revenue", "Budget vs Revenue")
corr, pval = stats.pearsonr(df["Budget"], df["Revenue"])
print(f"\nHypothesis: Budget predicts Revenue.\nCorrelation: r = {corr:.2f}, p = {pval:.2e}")
print("✅ Conclusion:" if pval < 0.05 else "❌ No significant evidence found.")
